name: Deploy mm and simple to Nx

on: push

jobs:
  execute:
    name: Execute
    runs-on: ubuntu-latest
    steps:
      - name: Start Sonatype Nexus container
        run: |
          docker login -u ${{secrets.DOCKERHUB_USER}} -p ${{secrets.DOCKERHUB_PASS}}
          docker volume create nexus-volume
          docker run -d -p 8081:8081 --name nexus --volume nexus-volume:/nexus-data/:rw sonatype/nexus3
      - name: Check Nexus status
        run: |
          while true; 
          do \
            echo "Checking Nexus status"
            sleep 10 
            docker container logs nexus 2>&1 | grep "Started Sonatype Nexus OSS" && break
          done
      - id: nexus-password
        name: Get admin password
        run: |
          pass=$(docker exec nexus cat /nexus-data/admin.password)
          echo "::set-output name=nexus-password::$pass"
      - name: Change default admin password
        run: |
          curl -ifu admin:"${{steps.nexus-password.outputs.nexus-password}}" \
          -XPUT -H 'Content-Type: text/plain' \
          --data "${{secrets.NEW_NEXUS_ADMIN_PASSWORD}}" \
          http://localhost:8081/service/rest/v1/security/users/admin/change-password
      - name: Enable anonymous access
        run: |
          anonymousaccess=$(curl -X 'PUT' \
          'http://localhost:8081/service/rest/v1/security/anonymous' \
          -H 'accept: application/json' \
          -H 'Content-Type: application/json' \
          -u 'admin:${{secrets.NEW_NEXUS_ADMIN_PASSWORD}}' \
          -s \
          -d '{"enabled": true}' | jq '.enabled') && [[ $anonymousaccess == "true" ]]
      - name: Create repository for release candidates
        run: |
          returncode=$(curl -X 'POST' \
          'http://localhost:8081/service/rest/v1/repositories/maven/hosted' \
          -H 'accept: application/json' \
          -H 'Content-Type: application/json' \
          -u 'admin:${{secrets.NEW_NEXUS_ADMIN_PASSWORD}}' \
          -w "%{http_code}\n" \
          -s \
          -d '{
                "name": "maven-release-candidates",
                "online": true,
                "storage": {
                  "blobStoreName": "default",
                  "strictContentTypeValidation": true,
                  "writePolicy": "allow_once"
                },
                "maven": {
                  "versionPolicy": "MIXED",
                  "layoutPolicy": "STRICT",
                  "contentDisposition": "ATTACHMENT"
                }
              }') && [[ $returncode == "201" ]]
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '8'
      
      - name: Build simple
        run: mvn clean verify -f simple-app/pom.xml -q
      - name: Publish simple artifact
        env:
          NEXUS_USER: admin
          NEXUS_PASS: ${{secrets.NEW_NEXUS_ADMIN_PASSWORD}}
        run: |
          mvn \
          -s config/settings.xml \
          -f simple-app/pom.xml deploy \
          -DaltDeploymentRepository=nexus::default::http://localhost:8081/repository/maven-snapshots
      
#      - name: Build multimodule
#        run: mvn clean verify -f multimodule/pom.xml -q
#      - name: Publish multimodule artifact
#        env:
#          NEXUS_USER: admin
#          NEXUS_PASS: ${{secrets.NEW_NEXUS_ADMIN_PASSWORD}}
#        run: |
#          mvn \
#          -s config/settings.xml \
#          -f multimodule/pom.xml deploy \
#          -DaltDeploymentRepository=nexus::default::http://localhost:8081/repository/maven-snapshots
      
      - name: Check Deploy
        run: |
          curl -X 'GET' \
          -u 'admin:${{secrets.NEW_NEXUS_ADMIN_PASSWORD}}' \ 
          'http://localhost:8081/service/rest/v1/search?sort=name&repository=maven-snapshots&maven.artifactId=simple-app' \
          -H 'accept: application/json' | jq
